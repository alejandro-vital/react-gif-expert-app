{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GiffExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","res","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","GiffExpertApp","props","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAqCeA,EAlCK,SAAC,GAAyB,IAAtBC,EAAqB,EAArBA,cAEpB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAiBA,OACI,sBAAMC,SAZW,SAAEC,GACnBA,EAAEC,iBAEGJ,EAAWK,OAAOC,OAAS,IAC5BR,GAAe,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACvCN,EAAc,MAOlB,SACI,uBACIO,KAAK,OACLC,MAAQT,EACRU,SApBc,SAAEP,GACxBF,EAAeE,EAAEQ,OAAOF,a,+BCNnBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbC,EADa,iDACoCC,UAAWH,GAD/C,+DAEDI,MAAOF,GAFN,cAEbG,EAFa,gBAGIA,EAAIC,OAHR,uBAGXC,EAHW,EAGXA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GACnB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAKQ,EAAIG,OAAOC,iBAAiBZ,QATtB,kBAcZM,GAdY,4CAAH,sDCAPO,EAAc,SAAC,GAAuB,EAArBJ,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IACrC,OACI,sBAAKc,UAAU,yCAAf,UACI,kCAAMJ,EAAN,OACA,qBAAKK,IAAMf,EAAMgB,IAAMN,QCFtBO,EAAU,SAAC,GAAoB,IAAjBnB,EAAgB,EAAhBA,SAEvB,ECFwB,SAAEA,GAE1B,MAA0Bd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAmBA,OAdAC,qBAAW,WAEPxB,EAASC,GAEJwB,MAAM,SAAAC,GACHH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAItB,CAAEpB,IAGEqB,EDnB0BK,CAAc1B,GAAlCa,EAAb,EAAQN,KAAaa,EAArB,EAAqBA,QAErB,OACI,qCACI,qBAAIJ,UAAU,oCAAd,cAAqDhB,EAArD,OAEEoB,GAAW,mBAAGJ,UAAU,mCAAb,uBAEb,qBAAKA,UAAU,YAAf,SAEQH,EAAOJ,KAAK,SAAAC,GAAG,OACX,cAAC,EAAD,eAESA,GADCA,EAAIC,aEoBvBgB,EAhCO,SAAAC,GAElB,MAAoC1C,mBAAS,CAAC,gBAA9C,mBAAO2C,EAAP,KAAmB5C,EAAnB,KAOA,OACI,qCACI,gDACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBAEA,6BAEQ4C,EAAWpB,KAAK,SAAAT,GAAQ,OACpB,cAAC,EAAD,CAEIA,SAAYA,GADNA,Y,MChBlC8B,IAASC,OAEL,cAAC,EAAD,IAEFC,SAASC,eAAe,W","file":"static/js/main.4d8f3e15.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\n\nconst AddCategory = ( { setCategories } ) => {\n\n    const [inputValue, setInputValue] = useState('');\n\n    const handleInputChange = ( e ) => {\n        setInputValue( e.target.value );\n    }\n\n    const handleSubmit = ( e ) => {\n        e.preventDefault();\n        \n        if ( inputValue.trim().length > 2 ) {\n            setCategories( cats => [inputValue, ...cats] );\n            setInputValue('');\n        }\n        \n        \n    } \n\n    return (\n        <form onSubmit={ handleSubmit }>\n            <input \n                type=\"text\" \n                value={ inputValue } \n                onChange={ handleInputChange }\n            />\n        </form>\n    )\n}\n\nAddCategory.propTypes = {\n    setCategories: PropTypes.func.isRequired\n}\n\nexport default AddCategory\n","\n\nexport const getGifs = async( category ) => {\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI( category ) }&limit=10&api_key=07YF2OFGvb8xJG0CIA964GUuNencCuvh`;\n    const res = await fetch( url );\n    const { data } = await res.json();\n\n    const gifs = data.map( img => {\n        return {\n            id: img.id,\n            title: img.title,\n            url: img.images.downsized_medium.url\n        }\n    })\n\n\n    return gifs;\n}","import React from 'react'\n\nexport const GifGridItem = ( {id, title, url} ) => {\n    return (\n        <div className=\"card animate__animated animate__fadeIn\">\n            <p> { title } </p>\n            <img src={ url } alt={ title } />\n        </div>\n    )\n}\n","import React from 'react'\nimport { useFetchGifs } from '../hooks/useFetchGifs'\nimport { GifGridItem } from './GifGridItem';\n\nexport const GifGrid = ( { category } ) => {\n\n    const { data:images, loading } = useFetchGifs( category );\n\n    return (\n        <>\n            <h3 className=\"animate__animated animate__fadeIn\"> { category } </h3>\n\n            { loading && <p className=\"animate__animated animate__flash\"> Loading </p> }\n\n            <div className=\"card-grid\"> \n                {\n                    images.map( img => (\n                        <GifGridItem \n                            key={ img.id }\n                            { ...img } \n                        />\n                    ))\n                }\n            </div> \n        </>\n    )\n}\n","import { useEffect, useState } from \"react\"\nimport { getGifs } from \"../helpers/getGifs\";\n\n\nexport const useFetchGifs = ( category ) => {\n\n    const [state, setstate] = useState({\n        data: [],\n        loading: true\n    });\n\n    useEffect( () => {\n\n        getGifs( category )\n\n            .then( imgs => {\n                setstate({\n                    data: imgs,\n                    loading: false\n                });\n            })\n\n    }, [ category ])\n\n\n    return state; // {data: [], loading: true}\n}\n","import React, { useState } from 'react'\n\n\nimport AddCategory from './components/AddCategory'\nimport { GifGrid } from './components/GifGrid'\n\nconst GiffExpertApp = props => {\n\n    const [categories, setCategories] = useState(['Dragon Ball'])\n\n    // const handleAdd = () => {\n    //     // setCategories( [...categories, 'Given'] );\n    //     setCategories( cats => [...cats, 'Given'] );\n    // }\n\n    return (\n        <>\n            <h2>GiffExpertApp!</h2>\n            <AddCategory setCategories={ setCategories } />\n            <hr/>\n\n            <ol>\n                {\n                    categories.map( category => (\n                        <GifGrid \n                            key={ category }\n                            category= { category } \n                        />\n                    ))\n                }\n            </ol>\n                    \n        </>\n    )\n}\n\n\n\nexport default GiffExpertApp\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport GiffExpertApp from './GiffExpertApp';\n\nimport './index.css';\n\n\n\nReactDOM.render(\n  \n    <GiffExpertApp />,\n  \n  document.getElementById('root')\n\n);\n\n"],"sourceRoot":""}